// <auto-generated />
using System;
using HNG_Backend_Stage_Two_User_Auth.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace HNG_Backend_Stage_Two_User_Auth.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20240709023845_CreatedUserOrganisations")]
    partial class CreatedUserOrganisations
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("HNG_Backend_Stage_Two_User_Auth.Models.User", b =>
                {
                    b.Property<string>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)")
                        .HasDefaultValueSql("'U' || LPAD(NEXTVAL('user_id_seq')::TEXT, 5, '0')");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("UserId");

                    b.HasIndex("Email")
                        .IsUnique();

                    b.ToTable("Users");
                });

            modelBuilder.Entity("HNG_Backend_Stage_Two_User_Auth.Organisation", b =>
                {
                    b.Property<string>("OrgId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("text")
                        .HasDefaultValueSql("'ORG' || LPAD(NEXTVAL('organisation_id_seq')::TEXT, 5, '0')");

                    b.Property<string>("Description")
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("OrgId");

                    b.ToTable("Organisations");
                });

            modelBuilder.Entity("HNG_Backend_Stage_Two_User_Auth.UserOrganisation", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("character varying(255)");

                    b.Property<string>("OrgId")
                        .HasColumnType("text");

                    b.Property<DateTimeOffset>("CreationDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("timestamp with time zone")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP");

                    b.HasKey("UserId", "OrgId");

                    b.HasIndex("OrgId");

                    b.ToTable("UserOrganisations", (string)null);
                });

            modelBuilder.Entity("HNG_Backend_Stage_Two_User_Auth.UserOrganisation", b =>
                {
                    b.HasOne("HNG_Backend_Stage_Two_User_Auth.Organisation", "Organisation")
                        .WithMany("UserOrganisations")
                        .HasForeignKey("OrgId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("HNG_Backend_Stage_Two_User_Auth.Models.User", "User")
                        .WithMany("UserOrganisations")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Organisation");

                    b.Navigation("User");
                });

            modelBuilder.Entity("HNG_Backend_Stage_Two_User_Auth.Models.User", b =>
                {
                    b.Navigation("UserOrganisations");
                });

            modelBuilder.Entity("HNG_Backend_Stage_Two_User_Auth.Organisation", b =>
                {
                    b.Navigation("UserOrganisations");
                });
#pragma warning restore 612, 618
        }
    }
}
